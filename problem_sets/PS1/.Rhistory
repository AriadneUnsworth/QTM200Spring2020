# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("ggplot2"),  pkgTest)
# set working directory
setwd("~/Documents/GitHub/QTM200Spring2020/problem_sets/PS1")
#####################
# read in expenditure data
expenditure <- read.table("expenditure.txt", header=T)
# make sure that Region is categorical
expenditure$Region <- as.factor(expenditure$Region)
pdf("plot_3d2.pdf")
ggplot(expenditure, aes(x=X1, y=Y, colour=Region)) +
geom_point()   labs(y="Y\n", x="\nX1") +
theme_bw() +
theme(axis.title = element_text(size=20),
axis.text = element_text(size=15),
legend.title = element_text(size=17),
legend.text = element_text(size=15))
dev.off()
ggplot(expenditure, aes(x=X1, y=Y, colour=Region)) +
geom_point()  + labs(y="Y\n", x="\nX1") +
theme_bw() +
theme(axis.title = element_text(size=20),
axis.text = element_text(size=15),
legend.title = element_text(size=17),
legend.text = element_text(size=15))
pdf("plot_3d2.pdf")
ggplot(expenditure, aes(x=X1, y=Y, colour=Region)) +
geom_point()  + labs(y="Y\n", x="\nX1") +
theme_bw() +
theme(axis.title = element_text(size=20),
axis.text = element_text(size=15),
legend.title = element_text(size=17),
legend.text = element_text(size=15))
dev.off()
dev.off()
pdf("plot_3d2.pdf")
ggplot(expenditure, aes(x=X1, y=Y, colour=Region)) +
geom_point()  +labs(y="Y\n", x="\nX1") +
theme_bw() +
theme(axis.title = element_text(size=20),
axis.text = element_text(size=15),
legend.title = element_text(size=17),
legend.text = element_text(size=15))
dev.off()
